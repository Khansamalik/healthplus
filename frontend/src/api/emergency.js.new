// frontend/src/api/emergency.js

import axios from 'axios';

const API_URL = 'http://localhost:5000/api';

// Create axios instance with auth token
const createAuthInstance = () => {
  const token = localStorage.getItem('token');
  console.log('Using auth token:', token ? 'Token exists' : 'No token found');
  return axios.create({
    baseURL: API_URL,
    headers: {
      'Content-Type': 'application/json',
      'Authorization': token ? `Bearer ${token}` : ''
    }
  });
};

// ==================== EMERGENCY CONTACTS ====================

export const fetchContacts = async () => {
  try {
    const api = createAuthInstance();
    const response = await api.get('/emergency/contacts');
    console.log('Fetched contacts:', response.data);
    return response.data;
  } catch (error) {
    console.error('Error fetching contacts:', error.response?.data || error.message);
    throw error;
  }
};

export const createContact = async (contactData) => {
  try {
    const api = createAuthInstance();
    console.log('Creating contact with data:', contactData);
    const response = await api.post('/emergency/contacts', contactData);
    console.log('Contact created successfully:', response.data);
    return response.data;
  } catch (error) {
    console.error('Error creating contact:', error.response?.data || error.message);
    throw error;
  }
};

export const updateContact = async (id, contactData) => {
  try {
    const api = createAuthInstance();
    console.log(`Updating contact ${id} with data:`, contactData);
    const response = await api.put(`/emergency/contacts/${id}`, contactData);
    console.log('Contact updated successfully:', response.data);
    return response.data;
  } catch (error) {
    console.error('Error updating contact:', error.response?.data || error.message);
    throw error;
  }
};

export const deleteContact = async (id) => {
  try {
    const api = createAuthInstance();
    console.log(`Deleting contact with ID: ${id}`);
    const response = await api.delete(`/emergency/contacts/${id}`);
    console.log('Contact deleted successfully');
    return response.data;
  } catch (error) {
    console.error('Error deleting contact:', error.response?.data || error.message);
    throw error;
  }
};

// ==================== PREFERRED SERVICES ====================

export const fetchServices = async () => {
  try {
    const api = createAuthInstance();
    const response = await api.get('/emergency/services');
    console.log('Fetched services:', response.data);
    return response.data;
  } catch (error) {
    console.error('Error fetching services:', error.response?.data || error.message);
    throw error;
  }
};

export const createService = async (serviceData) => {
  try {
    const api = createAuthInstance();
    console.log('Creating service with data:', serviceData);
    const response = await api.post('/emergency/services', serviceData);
    console.log('Service created successfully:', response.data);
    return response.data;
  } catch (error) {
    console.error('Error creating service:', error.response?.data || error.message);
    throw error;
  }
};

export const deleteService = async (id) => {
  try {
    const api = createAuthInstance();
    console.log(`Deleting service with ID: ${id}`);
    const response = await api.delete(`/emergency/services/${id}`);
    console.log('Service deleted successfully');
    return response.data;
  } catch (error) {
    console.error('Error deleting service:', error.response?.data || error.message);
    throw error;
  }
};

// ==================== PATIENT INFO ====================

export const fetchPatientInfo = async () => {
  try {
    const api = createAuthInstance();
    const response = await api.get('/emergency/patient-info');
    console.log('Fetched patient info:', response.data);
    return response.data;
  } catch (error) {
    console.error('Error fetching patient info:', error.response?.data || error.message);
    throw error;
  }
};

export const updatePatientInfo = async (patientData) => {
  try {
    const api = createAuthInstance();
    console.log('Updating patient info with data:', patientData);
    const response = await api.put('/emergency/patient-info', patientData);
    console.log('Patient info updated successfully:', response.data);
    return response.data;
  } catch (error) {
    console.error('Error updating patient info:', error.response?.data || error.message);
    throw error;
  }
};

// ==================== COMPLETE DATA ====================

export const fetchAllEmergencyData = async () => {
  try {
    const api = createAuthInstance();
    console.log('Fetching all emergency data');
    const response = await api.get('/emergency/all');
    console.log('All emergency data fetched successfully:', response.data);
    return response.data;
  } catch (error) {
    console.error('Error fetching all emergency data:', error.response?.data || error.message);
    throw error;
  }
};
